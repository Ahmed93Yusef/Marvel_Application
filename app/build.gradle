plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id "com.diffplug.eclipse.apt" version "3.26.0"
}

android {
    compileSdk 31

    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    defaultConfig {
        applicationId "com.example.marvel_application"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "PUBLIC_API_KEY", localProperties['publicApiKey']
        buildConfigField "String", "PRIVATE_API_KEY", localProperties['privateApiKey']
        buildConfigField "String", "BASE_API_URL", "\"https://gateway.marvel.com\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        //noinspection DataBindingWithoutKapt
        dataBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //fragment & activity implementation
    def ktx_version = "1.4.0"
    implementation "androidx.activity:activity-ktx:$ktx_version"
    implementation "androidx.fragment:fragment-ktx:$ktx_version"
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    //liveData implementation
    def liveCycle_version = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveCycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$liveCycle_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    //navigation component implementation
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // RXJava dependency
    implementation 'io.reactivex.rxjava3:rxjava:3.1.1'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    //retrofit implementation
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //dagger hilt
    def daggerHilt_version = "2.40"
    implementation "com.google.dagger:hilt-android:$daggerHilt_version"
    kapt "com.google.dagger:hilt-compiler:$daggerHilt_version"

    //mapStruct
    def mapStruct_version = "1.5.0.Beta1"
    implementation "org.mapstruct:mapstruct:$mapStruct_version"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapStruct_version"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapStruct_version"
    kapt("org.mapstruct:mapstruct-processor:$mapStruct_version")

    //okhttp implementation
    def okhttp_version = '5.0.0-alpha.3'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    //Glide implementation
    def glide_version = '4.12.0'
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    //Glide implementation svg
    implementation 'com.github.corouteam:GlideToVectorYou:v2.0.0'

    // ROOM DATABASE
    def room_version = "2.4.0-beta02"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$room_version"

    //lottie implementation
    implementation 'com.airbnb.android:lottie:4.2.2'

    //Shapes for image View
    implementation 'com.mikhaellopez:circularimageview:4.3.0'

    //diagonal Image View
    implementation 'com.github.santalu:diagonal-imageview:1.1.1'

    //PagerIndicator
    implementation 'com.tbuonomo:dotsindicator:4.2'

    //Custom Recycler View
    implementation 'com.yarolegovich:discrete-scrollview:1.5.1'

    //progress bar
    implementation 'com.github.Marvel999:Android-Loading-Animation:1.0.0'

}
